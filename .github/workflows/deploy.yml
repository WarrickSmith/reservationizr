name: Deploy on Release

on:
  release:
    types: [published]

jobs:

  deploy:

    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Docker login  
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: SSH into remote server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        debug: true 
        allenvs: true
        script: |
          cd c:\dockerapps\reservationizr 
          dir
          git pull
          docker context ls | findstr /C:"remotecontext" || docker context create remotecontext --docker host=ssh://${{ secrets.USERNAME }}@${{ secrets.HOST }}
          docker-compose --context remotecontext up --build
          exit

    # - name: Build image on remote server  
    #   run: |
    #     ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} "cd /dockerapps/reservationizr && docker-compose build"

    # - name: Deploy stack
    #   run: |  
    #     ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} "docker stack deploy -c /dockerapps/reservationizr/docker-compose.yml reservationizr"


# name: Deploy on Release
# on: 
#   release:
#     types: [published]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Configure Git 
#         run: |
#           git config --global user.name "${{ secrets.USERNAME }}"  
#           git config --global user.email "warrick@baybox.co.nz"

#       - name: Deploy to remote server repository
#         run: |
#           sshpass -p "${{ secrets.PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} "cd C:\DockerApps\reservationizr && git pull"    

#       - name: Check for existing docker context
#         run: |
#           sshpass -p "${{ secrets.PASSWORD }}" ssh -tt ${{ secrets.USERNAME }}@${{ secrets.HOST }} "docker context ls | findstr /C:"remotecontext" || docker context create remotecontext --docker host=ssh://${{ secrets.USERNAME }}@${{ secrets.HOST }}"

#       - name: Deploy docker image
#         run: |
#           sshpass -p "${{ secrets.PASSWORD }}" ssh -tt ${{ secrets.USERNAME }}@${{ secrets.HOST }} "cd C:\DockerApps\reservationizr && docker-compose --context remotecontext up --build"